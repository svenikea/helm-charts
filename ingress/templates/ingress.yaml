apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.deployment.name }}-ingress
  annotations:
    {{ if .Values.certManager.enabled }}
    cert-manager.io/issuer: {{ .Values.deployment.name }}-issuer
    {{ end }}
    {{ if .Values.ingress.annotations }}
    {{ .Values.ingress.annotations | toYaml | nindent 4 }}
    {{ end }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
    {{ if .Values.ingress.s3Behavior }}
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      set $bucket "";
      if ($host ~* "^(?<bucket>[^.]+){{ include "escapeDots" .Values.ingress.hostName }}") {
        set $bucket $bucket;
      }

      # Only rewrite if $bucket is set (non-empty)
      if ($bucket != "") {
        rewrite ^/(.*)$ /$bucket/$1 break;
      }
    {{ end }}
spec:
  ingressClassName: {{ .Values.ingress.ingressClassName }}
  rules: {{ .Values.ingress.rules | toYaml | nindent 4 }}
  {{ if .Values.certManager.enabled }}
  tls:
  {{ if .Values.ingress.hostName }}
    - hosts:
        - {{ .Values.ingress.hostName }}
  {{ end }}
  {{ if .Values.ingress.hostNames }}
    - hosts:
        {{ .Values.ingress.hostNames | toYaml | nindent 8 }}
  {{ end }}
      secretName: {{ .Values.deployment.name }}-ingress-secret
  {{ end }}
