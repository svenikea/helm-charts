# Deployment values
deployment:
  name:
  scale: 1
  image:
    name: service
    tag: latest
    repositoryUrl:
    pullPolicy:
  strategy:

serviceType:
loadBalancerIP: ""

promtail:
  enabled: false
  image:
  config: |
    # Promtail configuration here


servicePorts:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http

rBAC:
  enabled: false
  name: default

spreadConstraints:
  enabled: false
  maxSkew: 1
  nodeLabel: kubernetes.io/hostname
  whenUnsatisfiable: DoNotSchedule

# Create secret for private registry
privateRegistry:
  enabled: false
  registry:
  username:
  password:

initEnv:
  enabled: false
  envLists:
    - envName:
      valueFrom:
        secretKeyRef:
          secretName:
          key:
    - envName:
      value:

redisCredential:
  enabled: false

serviceEnv:
  enabled: false
  envLists:
    - envName:
      valueFrom:
        secretKeyRef:
          secretName:
          key:
    - envName:
      value:

secret:
  enabled: false
  secretLists:
    - name:
      data:
        # Key: Value

configMaps:
  enabled: false
  name: service-config-map
  keyBase:
    enabled: false
    mountPath: /path-to-file
    volumeName: volume_name
    subPath: subpath_name
    configName: defaultConfigMap
    content: |
      # String

  extraConfigFile:
    enabled: false
    files:
      - name: configuration1.yml
        data: |
          {
            "key": "file1"
          }
        mountPath: /path-to-file
        volumeName: volume name
        subPath: subpath name

resources:
  enabled: false
  memoryLimit: 512Mi
  memoryRequest: 256Mi

database:
  migration: false
  environment: DEV
  host:
  port:
  username:
  schema:
  password:
  name:
  connectionStringName: Database__ConnectionString
  databaseType:
  credentials:
    enabled: false
container:
  port: 8080

initDebug:
  enabled: false
initExtraVolumeMounts:
extraVolumeMounts:

extraVolumes:
initExtraVolumes:

extraContainer:
  enabled: false
  containers:

persistence:
  enabled: false
  name:
  storageClass:
  size:

livenessProbe:
  path:
  enabled: false

readinessProbe:
  path:
  enabled: false

monitoring:
  enabled: false

persistentVolumes:
  enabled: false
  volumes:
    - name:
      capacity:
      storageClass:
        enabled:
        name:
      mode:
      hostPath: ""
      type:
